version: '3.8'

services:
  setup:
    profiles:
      - setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk
    restart: unless-stopped

  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend.dockerfile
    secrets:
       - password_db
       - cookie_passphrase
    volumes:
      - logs:/tmp/backend
      - ./logs/backend:/tmp/backend
      - ./backend-io/:/app/io/
    ports:
      - "8080:8080"
    restart: unless-stopped
  frontend:
    build:
      context: .
      dockerfile: frontend.dockerfile
    ports:
      - "3000:3000"
    restart: unless-stopped
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - MARIADB_DATABASE=wedding #not a secret
      - MARIADB_USER=user #not a secret
      - MARIADB_PASSWORD_FILE=/run/secrets/password_db
      - MARIADB_ROOT_PASSWORD_FILE=/run/secrets/password_db_root
    secrets:
       - password_db_root
       - password_db
    volumes:
      - ./mariadb/data:/config
      - ./mariadb/init-db:/docker-entrypoint-initdb.d:ro
      - ./mariadb/my.cnf:/etc/mysql/my.cnf:ro
    ports:
      - 3306:3306
    restart: unless-stopped
  nginx:
    image: andrewnk/alpine-nginx-modsec
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/modsecurity.conf:/etc/nginx/modsec/modsecurity.conf
      - ./nginx/errors/403.html:/usr/share/nginx/errors/403.html
      - ./nginx/errors/404.html:/usr/share/nginx/errors/404.html
      - ./nginx/errors/50x.html:/usr/share/nginx/errors/50x.html
      - ./nginx/errors/5xx.html:/usr/share/nginx/errors/5xx.html
      - ./nginx/logs/:/var/log/nginx/
      - ./nginx/var/log/:/var/log/
    restart: unless-stopped

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
  logs:

secrets:
  password_db:
    file: password_db.txt
  password_db_root:
    file: password_db_root.txt
  cookie_passphrase:
    file: cookie-passphrase.txt